/*
 * This file is generated by jOOQ.
*/
package com.palominocia.JooqProject.modelo.tables;


import com.palominocia.JooqProject.modelo.Autentificacion;
import com.palominocia.JooqProject.modelo.Keys;
import com.palominocia.JooqProject.modelo.tables.records.UsuarioTransaccionRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsuarioTransaccion extends TableImpl<UsuarioTransaccionRecord> {

    private static final long serialVersionUID = 24012375;

    /**
     * The reference instance of <code>autentificacion.USUARIO_TRANSACCION</code>
     */
    public static final UsuarioTransaccion USUARIO_TRANSACCION = new UsuarioTransaccion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsuarioTransaccionRecord> getRecordType() {
        return UsuarioTransaccionRecord.class;
    }

    /**
     * The column <code>autentificacion.USUARIO_TRANSACCION.ID_TRANSACCION</code>.
     */
    public final TableField<UsuarioTransaccionRecord, Long> ID_TRANSACCION = createField("ID_TRANSACCION", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('autentificacion.\"USUARIO_TRANSACCION_ID_TRANSACCION_seq\"'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>autentificacion.USUARIO_TRANSACCION.DIRECCION_IP</code>.
     */
    public final TableField<UsuarioTransaccionRecord, String> DIRECCION_IP = createField("DIRECCION_IP", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>autentificacion.USUARIO_TRANSACCION.FEC_ULTIMO_LOGIN</code>.
     */
    public final TableField<UsuarioTransaccionRecord, Date> FEC_ULTIMO_LOGIN = createField("FEC_ULTIMO_LOGIN", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>autentificacion.USUARIO_TRANSACCION.ID_USUARIO</code>.
     */
    public final TableField<UsuarioTransaccionRecord, String> ID_USUARIO = createField("ID_USUARIO", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>autentificacion.USUARIO_TRANSACCION</code> table reference
     */
    public UsuarioTransaccion() {
        this(DSL.name("USUARIO_TRANSACCION"), null);
    }

    /**
     * Create an aliased <code>autentificacion.USUARIO_TRANSACCION</code> table reference
     */
    public UsuarioTransaccion(String alias) {
        this(DSL.name(alias), USUARIO_TRANSACCION);
    }

    /**
     * Create an aliased <code>autentificacion.USUARIO_TRANSACCION</code> table reference
     */
    public UsuarioTransaccion(Name alias) {
        this(alias, USUARIO_TRANSACCION);
    }

    private UsuarioTransaccion(Name alias, Table<UsuarioTransaccionRecord> aliased) {
        this(alias, aliased, null);
    }

    private UsuarioTransaccion(Name alias, Table<UsuarioTransaccionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Autentificacion.AUTENTIFICACION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UsuarioTransaccionRecord, Long> getIdentity() {
        return Keys.IDENTITY_USUARIO_TRANSACCION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UsuarioTransaccionRecord> getPrimaryKey() {
        return Keys.USUARIO_TRANSACCION_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UsuarioTransaccionRecord>> getKeys() {
        return Arrays.<UniqueKey<UsuarioTransaccionRecord>>asList(Keys.USUARIO_TRANSACCION_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UsuarioTransaccionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UsuarioTransaccionRecord, ?>>asList(Keys.USUARIO_TRANSACCION__FK_USUARIOS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsuarioTransaccion as(String alias) {
        return new UsuarioTransaccion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsuarioTransaccion as(Name alias) {
        return new UsuarioTransaccion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UsuarioTransaccion rename(String name) {
        return new UsuarioTransaccion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UsuarioTransaccion rename(Name name) {
        return new UsuarioTransaccion(name, null);
    }
}
