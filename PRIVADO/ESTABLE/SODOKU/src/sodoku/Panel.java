/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Panel.java
 *
 * Created on 09/07/2011, 11:12:17 PM
 */
package sodoku;

import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JONATHAN
 */
public class Panel extends javax.swing.JFrame{

    private static DefaultTableModel miModelo;
    public String[][] data = {};
    SODOKU obj = new SODOKU();
    int[][] sudoku = new int[9][9];
    int fila = 0;
    int columna = 0;
    int valor = 0;
    int nivel = 0;

    /** Creates new form Panel */
    public Panel() {
        initComponents();
        miModelo = new DefaultTableModel(data, new String[]{""}){
        };
        Tabla.setModel(miModelo);
        jScrollPane1.setViewportView(Tabla);
        miModelo.setRowCount(9);
        miModelo.setColumnCount(9);

        /*miModelo.addTableModelListener(new TableModelListener(){
        
        public void tableChanged(final TableModelEvent e) {
        System.out.println(e.getLastRow());
        }
        });*/
        nivel = Integer.parseInt(Nivel.getValue().toString());
        sudoku = obj.cargar_juego(nivel);
        //P(sudoku, fila, columna, valor, nivel);
        obj.imprime_vector(sudoku);
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (sudoku[i][j] != 0) {
                    Tabla.setValueAt(sudoku[i][j], i, j);

                }
            }
        }

    }

    public void P(int[][] sudoku, int fila, int columna, int valor, int nivel) throws NumberFormatException {
        while (true) {
            //COMPROBAMOS LA FILA ESTA EN RANGO.
            if (!obj.comprobar_indice(fila)) {
                obj.mensaje("El valor de la fila no es correcto..");
            }
            //COMPROBAMOS LA COLUMNA ESTA EN RANGO.
            else if (!obj.comprobar_indice(columna)) {
                obj.mensaje("El valor de la columna no es correcto.");
            }
            //COMPROBAMOS QUE EL VALOR ESTA EN RANGO.
            else if (!obj.comprobar_valor(valor)) {
                obj.mensaje("El valor introducido no es valido..");
            }
            //COMPROBAMOS QUE USE CASILLAS DISPONIBLES.
            else if (obj.es_origen((fila - 1), (columna - 1), obj.cargar_juego(nivel))) {
                obj.mensaje("Ese valor es predeterminado del juego...");
            }
            //COMPRUEBA QUE NO SE REPITA EL VALOR EN LA FILA.
            else if (obj.existe_fila(valor, fila, sudoku)) {
                obj.mensaje("[X] El valor " + valor + " ya ha sido usado en la fila..");
            }
            //COMPRUEBA QUE NO SE REPITA EL VALOR EN LA COLUMNA..
            else if (obj.existe_columna(valor, columna, sudoku)) {
                obj.mensaje("[X] El valor " + valor + " ya ha sido usado en la columna..");
            }
            //COMPRUEBA QUE EL VALOR NO ESTÉ EN LA CAJA.
            else if (obj.existe_caja(valor, fila, columna, sudoku)) {
                obj.mensaje("[X] El valor ya existe en la caja..");
            }
            //INTRODUCIMOS EL VALOR A LA MATRIZ.
            else {
                sudoku[(fila - 1)][(columna - 1)] = valor;
                obj.mensaje("[" + fila + "," + columna + "]=" + valor + " Correcto.");
            }


            //COMPRUEBA SI SE TERMINÓ EL JUEGO.
            if (obj.terminado(sudoku)) {
                obj.mensaje("FELICIDADES!!!! HAS TERMINADO EL JUEGO!!");
                obj.imprime_vector(sudoku);
                System.out.println("Presiona una tecla para continuar en el siguiente nivel..");

                //AUMENTAMOS EL NIVEL DEL JUEGO.
                nivel++;
                sudoku = obj.cargar_juego(nivel);
                obj.mensaje("SUDOKU NIVEL " + nivel);
            }


        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        Nivel = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        Tabla.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Tabla.setRowHeight(45);
        Tabla.getTableHeader().setReorderingAllowed(false);
        Tabla.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                TablaPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla);

        jButton1.setText("Resolver");

        jButton2.setText("Generar Otro");

        jLabel1.setText("Nivel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(64, 64, 64)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(Nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(Nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jLabel1))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_TablaPropertyChange
        System.out.println("berir " + evt.getNewValue() + "    " + evt.getOldValue());
        //P(sudoku, fila, columna, valor, nivel);
    }//GEN-LAST:event_TablaPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable(){

            public void run() {
                new Panel().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner Nivel;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
