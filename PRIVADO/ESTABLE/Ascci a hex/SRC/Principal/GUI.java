/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUI.java
 *
 * Created on 07/12/2010, 10:40:06 PM
 */
package Principal;

import javax.swing.JOptionPane;

/**
 *
 * @author JONATHAN
 */
public class GUI extends javax.swing.JFrame {

    /** Creates new form GUI */
    public GUI() {
        initComponents();
        setLocationRelativeTo(null); //Centra la pantalla
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnProceder = new javax.swing.JButton();
        txtOrigen = new javax.swing.JTextField();
        txtDestino = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        RdAscci = new javax.swing.JRadioButton();
        RdHEx = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ASCCI A HEX CONVERTIDOR");

        btnProceder.setText("Proceder");
        btnProceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcederActionPerformed(evt);
            }
        });

        txtOrigen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txtDestino.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel1.setText("Ingrese el texto a convertir");

        jLabel2.setText("Resultado");

        buttonGroup1.add(RdAscci);
        RdAscci.setSelected(true);
        RdAscci.setText("Ascci a hex");
        RdAscci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdAscciActionPerformed(evt);
            }
        });

        buttonGroup1.add(RdHEx);
        RdHEx.setText("hex a ascci");
        RdHEx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RdHExActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(txtOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                            .addComponent(txtDestino))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RdHEx, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RdAscci, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnProceder, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(RdAscci)
                .addGap(18, 18, 18)
                .addComponent(RdHEx)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnProceder)
                .addContainerGap(48, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcederActionPerformed
        String acumulado = "";
        if (txtOrigen.getText().length() != 0) {
            //LIMPIAR();
            String cadena = txtOrigen.getText();
            if (RdAscci.isSelected()) //si es ascci a hex
            {
                for (int i = 0; i < cadena.length(); i++) {
                    String valor = Integer.toHexString((int)(cadena.charAt(i))).toUpperCase();
                    //System.out.println(valor);
                    acumulado = acumulado+valor+":";
                }
                txtDestino.setText(acumulado.substring(0, acumulado.length()-1));
            }
            else
            {
                try {
                    cadena = cadena + ":";
                    for (int i = 0; i < cadena.length() - 1; i += 3) {
                        String valor = cadena.substring(i, i + 2);
                        char letra = (char) Integer.parseInt(valor, 16);
                        //System.out.println(letra);
                        acumulado = acumulado + letra;
                    }
                } catch (NumberFormatException numberFormatException) {
                    JOptionPane.showMessageDialog(null, "Verifique que solo existan tipos hex","Error de tipeo",JOptionPane.ERROR_MESSAGE);
                }
                txtDestino.setText(acumulado);
            }
        }
    }//GEN-LAST:event_btnProcederActionPerformed

    private void RdHExActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdHExActionPerformed
        LIMPIAR();
    }//GEN-LAST:event_RdHExActionPerformed

    private void RdAscciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RdAscciActionPerformed
        LIMPIAR();
    }//GEN-LAST:event_RdAscciActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RdAscci;
    private javax.swing.JRadioButton RdHEx;
    private javax.swing.JButton btnProceder;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtOrigen;
    // End of variables declaration//GEN-END:variables

    private void LIMPIAR() {
        txtDestino.setText("");
        txtOrigen.setText("");
        txtOrigen.requestFocus();
    }

}
