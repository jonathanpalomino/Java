/*
 * This file is generated by jOOQ.
*/
package com.palominocia.JooqProject.modelo.tables;


import com.palominocia.JooqProject.modelo.Autentificacion;
import com.palominocia.JooqProject.modelo.Keys;
import com.palominocia.JooqProject.modelo.tables.records.RolesRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Roles extends TableImpl<RolesRecord> {

    private static final long serialVersionUID = -399574476;

    /**
     * The reference instance of <code>autentificacion.ROLES</code>
     */
    public static final Roles ROLES = new Roles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RolesRecord> getRecordType() {
        return RolesRecord.class;
    }

    /**
     * The column <code>autentificacion.ROLES.ID_ROL</code>.
     */
    public final TableField<RolesRecord, Long> ID_ROL = createField("ID_ROL", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('autentificacion.\"ROLES_ID_ROL_seq\"'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>autentificacion.ROLES.NOMBRE_ROL</code>.
     */
    public final TableField<RolesRecord, String> NOMBRE_ROL = createField("NOMBRE_ROL", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>autentificacion.ROLES.MCA_HABILITADO</code>.
     */
    public final TableField<RolesRecord, String> MCA_HABILITADO = createField("MCA_HABILITADO", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>autentificacion.ROLES.FEC_ACTU</code>.
     */
    public final TableField<RolesRecord, Date> FEC_ACTU = createField("FEC_ACTU", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>autentificacion.ROLES.ID_USUARIO_MODIF</code>.
     */
    public final TableField<RolesRecord, String> ID_USUARIO_MODIF = createField("ID_USUARIO_MODIF", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>autentificacion.ROLES</code> table reference
     */
    public Roles() {
        this(DSL.name("ROLES"), null);
    }

    /**
     * Create an aliased <code>autentificacion.ROLES</code> table reference
     */
    public Roles(String alias) {
        this(DSL.name(alias), ROLES);
    }

    /**
     * Create an aliased <code>autentificacion.ROLES</code> table reference
     */
    public Roles(Name alias) {
        this(alias, ROLES);
    }

    private Roles(Name alias, Table<RolesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Roles(Name alias, Table<RolesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Autentificacion.AUTENTIFICACION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RolesRecord, Long> getIdentity() {
        return Keys.IDENTITY_ROLES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RolesRecord> getPrimaryKey() {
        return Keys.ROLES_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RolesRecord>> getKeys() {
        return Arrays.<UniqueKey<RolesRecord>>asList(Keys.ROLES_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RolesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RolesRecord, ?>>asList(Keys.ROLES__FK_ID_USUARIO_ROLES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Roles as(String alias) {
        return new Roles(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Roles as(Name alias) {
        return new Roles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Roles rename(String name) {
        return new Roles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Roles rename(Name name) {
        return new Roles(name, null);
    }
}
