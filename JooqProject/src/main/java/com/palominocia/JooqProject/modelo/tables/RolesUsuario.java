/*
 * This file is generated by jOOQ.
*/
package com.palominocia.JooqProject.modelo.tables;


import com.palominocia.JooqProject.modelo.Autentificacion;
import com.palominocia.JooqProject.modelo.Keys;
import com.palominocia.JooqProject.modelo.tables.records.RolesUsuarioRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolesUsuario extends TableImpl<RolesUsuarioRecord> {

    private static final long serialVersionUID = 1876864665;

    /**
     * The reference instance of <code>autentificacion.ROLES_USUARIO</code>
     */
    public static final RolesUsuario ROLES_USUARIO = new RolesUsuario();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RolesUsuarioRecord> getRecordType() {
        return RolesUsuarioRecord.class;
    }

    /**
     * The column <code>autentificacion.ROLES_USUARIO.ID_USUARIO</code>.
     */
    public final TableField<RolesUsuarioRecord, String> ID_USUARIO = createField("ID_USUARIO", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>autentificacion.ROLES_USUARIO.ID_ROL</code>.
     */
    public final TableField<RolesUsuarioRecord, Long> ID_ROL = createField("ID_ROL", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>autentificacion.ROLES_USUARIO</code> table reference
     */
    public RolesUsuario() {
        this(DSL.name("ROLES_USUARIO"), null);
    }

    /**
     * Create an aliased <code>autentificacion.ROLES_USUARIO</code> table reference
     */
    public RolesUsuario(String alias) {
        this(DSL.name(alias), ROLES_USUARIO);
    }

    /**
     * Create an aliased <code>autentificacion.ROLES_USUARIO</code> table reference
     */
    public RolesUsuario(Name alias) {
        this(alias, ROLES_USUARIO);
    }

    private RolesUsuario(Name alias, Table<RolesUsuarioRecord> aliased) {
        this(alias, aliased, null);
    }

    private RolesUsuario(Name alias, Table<RolesUsuarioRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Autentificacion.AUTENTIFICACION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RolesUsuarioRecord> getPrimaryKey() {
        return Keys.ROLES_USUARIO_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RolesUsuarioRecord>> getKeys() {
        return Arrays.<UniqueKey<RolesUsuarioRecord>>asList(Keys.ROLES_USUARIO_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RolesUsuarioRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RolesUsuarioRecord, ?>>asList(Keys.ROLES_USUARIO__FK_USUARIOS_ROLES, Keys.ROLES_USUARIO__FK_ROLES_USUARIOS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesUsuario as(String alias) {
        return new RolesUsuario(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolesUsuario as(Name alias) {
        return new RolesUsuario(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RolesUsuario rename(String name) {
        return new RolesUsuario(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RolesUsuario rename(Name name) {
        return new RolesUsuario(name, null);
    }
}
